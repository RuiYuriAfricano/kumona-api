import { PrismaClient } from '@prisma/client';
import * as bcrypt from 'bcrypt';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Iniciando seed do banco de dados...');

  // Limpar dados existentes (opcional - descomente se necess√°rio)
  // await prisma.notification.deleteMany();
  // await prisma.eyeImage.deleteMany();
  // await prisma.diagnosis.deleteMany();
  // await prisma.preventionActivity.deleteMany();
  // await prisma.userPreferences.deleteMany();
  // await prisma.medicalHistory.deleteMany();
  // await prisma.user.deleteMany();
  // await prisma.preventionTip.deleteMany();
  // await prisma.eyeExercise.deleteMany();

  // Criar usu√°rios de exemplo
  const hashedPassword = await bcrypt.hash('123456', 10);

  const user1 = await prisma.user.upsert({
    where: { email: 'joao@example.com' },
    update: {},
    create: {
      name: 'Jo√£o Silva',
      email: 'joao@example.com',
      password: hashedPassword,
      birthDate: new Date('1990-05-15'),
      about: 'Desenvolvedor de software interessado em sa√∫de ocular',
      phone: '+244 923 456 789',
      profileImage: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',
    },
  });

  const user2 = await prisma.user.upsert({
    where: { email: 'maria@example.com' },
    update: {},
    create: {
      name: 'Maria Santos',
      email: 'maria@example.com',
      password: hashedPassword,
      birthDate: new Date('1985-08-22'),
      about: 'Professora que passa muito tempo em frente ao computador',
      phone: '+244 912 345 678',
      profileImage: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',
    },
  });

  // Criar hist√≥rico m√©dico
  await prisma.medicalHistory.upsert({
    where: { userId: user1.id },
    update: {},
    create: {
      userId: user1.id,
      existingConditions: ['Miopia leve'],
      familyHistory: ['Glaucoma (av√¥ paterno)'],
      medications: ['Col√≠rio lubrificante'],
    },
  });

  await prisma.medicalHistory.upsert({
    where: { userId: user2.id },
    update: {},
    create: {
      userId: user2.id,
      existingConditions: ['Olho seco'],
      familyHistory: ['Catarata (m√£e)'],
      medications: [],
    },
  });

  // Criar prefer√™ncias de usu√°rio
  await prisma.userPreferences.upsert({
    where: { userId: user1.id },
    update: {},
    create: {
      userId: user1.id,
      notificationsEnabled: true,
      reminderFrequency: 'daily',
      language: 'pt',
    },
  });

  await prisma.userPreferences.upsert({
    where: { userId: user2.id },
    update: {},
    create: {
      userId: user2.id,
      notificationsEnabled: true,
      reminderFrequency: 'weekly',
      language: 'pt',
    },
  });

  // Criar dicas de preven√ß√£o
  const preventionTips = [
    {
      title: 'Regra 20-20-20',
      description: 'A cada 20 minutos, olhe para algo a 20 p√©s (6 metros) de dist√¢ncia por 20 segundos para reduzir a fadiga ocular.',
      category: 'Uso de telas',
    },
    {
      title: 'Hidrata√ß√£o adequada',
      description: 'Beba pelo menos 2 litros de √°gua por dia para manter seus olhos hidratados e saud√°veis.',
      category: 'Sa√∫de geral',
    },
    {
      title: 'Prote√ß√£o UV',
      description: 'Use √≥culos de sol com prote√ß√£o UV ao ar livre, mesmo em dias nublados, para proteger seus olhos dos raios solares.',
      category: 'Prote√ß√£o',
    },
    {
      title: 'Pisque com frequ√™ncia',
      description: 'Pisque conscientemente com mais frequ√™ncia ao usar dispositivos digitais para manter os olhos lubrificados.',
      category: 'Uso de telas',
    },
    {
      title: 'Ilumina√ß√£o adequada',
      description: 'Mantenha uma ilumina√ß√£o adequada no ambiente de trabalho para reduzir o esfor√ßo ocular.',
      category: 'Ambiente',
    },
    {
      title: 'Dieta rica em vitaminas',
      description: 'Consuma alimentos ricos em vitaminas A, C e E, como cenoura, espinafre e frutas c√≠tricas.',
      category: 'Nutri√ß√£o',
    },
  ];

  for (const tipData of preventionTips) {
    await prisma.preventionTip.create({
      data: tipData,
    });
  }

  // Criar exerc√≠cios oculares
  const eyeExercises = [
    {
      title: 'Exerc√≠cio de Foco',
      description: 'Alterne o foco entre objetos pr√≥ximos e distantes para fortalecer os m√∫sculos oculares.',
      instructions: [
        'Segure o dedo a 15cm do rosto',
        'Foque no dedo por 3 segundos',
        'Mude o foco para um objeto distante',
        'Mantenha o foco por 3 segundos',
        'Repita 10 vezes'
      ],
      duration: 5,
      imageUrl: 'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=300&h=200&fit=crop',
    },
    {
      title: 'Movimento Circular',
      description: 'Mova os olhos em c√≠rculos para relaxar e fortalecer os m√∫sculos oculares.',
      instructions: [
        'Feche os olhos suavemente',
        'Mova os olhos em c√≠rculos lentos no sentido hor√°rio',
        'Fa√ßa 5 c√≠rculos completos',
        'Mude para o sentido anti-hor√°rio',
        'Fa√ßa mais 5 c√≠rculos',
        'Abra os olhos e relaxe'
      ],
      duration: 3,
      imageUrl: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=300&h=200&fit=crop',
    },
    {
      title: 'Piscada Consciente',
      description: 'Exerc√≠cio de piscada para lubrificar os olhos e reduzir o ressecamento.',
      instructions: [
        'Sente-se confortavelmente',
        'Pisque normalmente 5 vezes',
        'Feche os olhos firmemente por 2 segundos',
        'Abra e pisque rapidamente 10 vezes',
        'Relaxe por 5 segundos',
        'Repita o ciclo 3 vezes'
      ],
      duration: 2,
      imageUrl: 'https://images.unsplash.com/photo-1582750433449-648ed127bb54?w=300&h=200&fit=crop',
    },
  ];

  for (const exerciseData of eyeExercises) {
    await prisma.eyeExercise.create({
      data: exerciseData,
    });
  }

  // Criar diagn√≥sticos de exemplo
  const diagnosis1 = await prisma.diagnosis.create({
    data: {
      userId: user1.id,
      imageUrl: 'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=400&h=300&fit=crop',
      condition: 'Olhos saud√°veis',
      severity: 'low',
      score: 85,
      description: 'Seus olhos apresentam boa sa√∫de geral. Continue mantendo bons h√°bitos de cuidado ocular.',
      recommendations: [
        'Continue fazendo pausas regulares durante o uso de telas',
        'Mantenha uma dieta rica em vitaminas A, C e E',
        'Use √≥culos de sol com prote√ß√£o UV quando ao ar livre',
        'Realize exames oftalmol√≥gicos anuais'
      ],
      createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7 dias atr√°s
    },
  });

  const diagnosis2 = await prisma.diagnosis.create({
    data: {
      userId: user1.id,
      imageUrl: 'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=400&h=300&fit=crop',
      condition: 'Leve ressecamento ocular',
      severity: 'medium',
      score: 72,
      description: 'Detectamos sinais de ressecamento ocular leve. Isso √© comum em pessoas que passam muito tempo em frente a telas.',
      recommendations: [
        'Use col√≠rio lubrificante sem conservantes',
        'Aumente a frequ√™ncia de piscadas',
        'Mantenha umidade adequada no ambiente',
        'Fa√ßa pausas mais frequentes durante o trabalho'
      ],
      createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // 30 dias atr√°s
    },
  });

  const diagnosis3 = await prisma.diagnosis.create({
    data: {
      userId: user2.id,
      imageUrl: 'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=400&h=300&fit=crop',
      condition: 'Fadiga ocular',
      severity: 'medium',
      score: 68,
      description: 'Sinais de fadiga ocular detectados. Recomendamos ajustes na rotina de trabalho e descanso.',
      recommendations: [
        'Aplique a regra 20-20-20 rigorosamente',
        'Ajuste o brilho e contraste da tela',
        'Considere usar filtro de luz azul',
        'Realize exerc√≠cios oculares diariamente'
      ],
      createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000), // 14 dias atr√°s
    },
  });

  // Criar atividades de preven√ß√£o
  const preventionActivities = [
    {
      userId: user1.id,
      type: 'exercise',
      description: 'Exerc√≠cio de foco - altern√¢ncia entre objetos pr√≥ximos e distantes',
      duration: 5,
      notes: 'Senti al√≠vio na tens√£o ocular',
      completedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 dia atr√°s
    },
    {
      userId: user1.id,
      type: 'rest',
      description: 'Pausa de 20 minutos longe das telas',
      duration: 20,
      notes: 'Pausa durante o trabalho',
      completedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2 dias atr√°s
    },
    {
      userId: user2.id,
      type: 'exercise',
      description: 'Movimento circular dos olhos',
      duration: 3,
      notes: 'Exerc√≠cio matinal',
      completedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 dia atr√°s
    },
    {
      userId: user2.id,
      type: 'rest',
      description: 'Descanso visual durante a aula',
      duration: 15,
      notes: 'Pausa entre as aulas',
      completedAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // 3 dias atr√°s
    },
  ];

  for (const activity of preventionActivities) {
    await prisma.preventionActivity.create({
      data: activity,
    });
  }

  // Criar notifica√ß√µes
  const notifications = [
    {
      userId: user1.id,
      title: 'Lembrete de Diagn√≥stico',
      message: '√â hora de realizar um novo diagn√≥stico ocular. Mantenha sua sa√∫de visual em dia!',
      type: 'info',
      read: false,
      createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 horas atr√°s
    },
    {
      userId: user1.id,
      title: 'Exerc√≠cio Recomendado',
      message: 'Que tal fazer alguns exerc√≠cios oculares? Seus olhos v√£o agradecer!',
      type: 'success',
      read: true,
      createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 dia atr√°s
    },
    {
      userId: user2.id,
      title: 'Resultado de Diagn√≥stico',
      message: 'Seu diagn√≥stico recente indica fadiga ocular. Confira as recomenda√ß√µes personalizadas.',
      type: 'warning',
      read: false,
      createdAt: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 horas atr√°s
    },
  ];

  for (const notification of notifications) {
    await prisma.notification.create({
      data: notification,
    });
  }

  console.log('‚úÖ Seed conclu√≠do com sucesso!');
  console.log(`üë§ Usu√°rios criados: ${user1.name}, ${user2.name}`);
  console.log(`üí° ${preventionTips.length} dicas de preven√ß√£o criadas`);
  console.log(`üèÉ ${eyeExercises.length} exerc√≠cios oculares criados`);
  console.log(`üî¨ ${3} diagn√≥sticos de exemplo criados`);
  console.log(`üìã ${preventionActivities.length} atividades de preven√ß√£o criadas`);
  console.log(`üîî ${notifications.length} notifica√ß√µes criadas`);
}

main()
  .catch((e) => {
    console.error('‚ùå Erro durante o seed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
